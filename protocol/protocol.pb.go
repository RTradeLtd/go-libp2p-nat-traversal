// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Protocol_Type int32

const (
	Protocol_CONNECTION_REQUEST Protocol_Type = 0
	Protocol_HOLE_PUNCH_REQUEST Protocol_Type = 1
	Protocol_PEER_UNKNOWN       Protocol_Type = 3
)

var Protocol_Type_name = map[int32]string{
	0: "CONNECTION_REQUEST",
	1: "HOLE_PUNCH_REQUEST",
	3: "PEER_UNKNOWN",
}

var Protocol_Type_value = map[string]int32{
	"CONNECTION_REQUEST": 0,
	"HOLE_PUNCH_REQUEST": 1,
	"PEER_UNKNOWN":       3,
}

func (x Protocol_Type) String() string {
	return proto.EnumName(Protocol_Type_name, int32(x))
}

func (Protocol_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 0}
}

type Protocol struct {
	Type                 Protocol_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=protocol.Protocol_Type" json:"type,omitempty"`
	PeerID               *Protocol_PeerID   `protobuf:"bytes,2,opt,name=peerID,proto3" json:"peerID,omitempty"`
	PeerInfo             *Protocol_PeerInfo `protobuf:"bytes,3,opt,name=peerInfo,proto3" json:"peerInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Protocol) Reset()         { *m = Protocol{} }
func (m *Protocol) String() string { return proto.CompactTextString(m) }
func (*Protocol) ProtoMessage()    {}
func (*Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

func (m *Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol.Unmarshal(m, b)
}
func (m *Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol.Marshal(b, m, deterministic)
}
func (m *Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol.Merge(m, src)
}
func (m *Protocol) XXX_Size() int {
	return xxx_messageInfo_Protocol.Size(m)
}
func (m *Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol proto.InternalMessageInfo

func (m *Protocol) GetType() Protocol_Type {
	if m != nil {
		return m.Type
	}
	return Protocol_CONNECTION_REQUEST
}

func (m *Protocol) GetPeerID() *Protocol_PeerID {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *Protocol) GetPeerInfo() *Protocol_PeerInfo {
	if m != nil {
		return m.PeerInfo
	}
	return nil
}

type Protocol_PeerID struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Protocol_PeerID) Reset()         { *m = Protocol_PeerID{} }
func (m *Protocol_PeerID) String() string { return proto.CompactTextString(m) }
func (*Protocol_PeerID) ProtoMessage()    {}
func (*Protocol_PeerID) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 0}
}

func (m *Protocol_PeerID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol_PeerID.Unmarshal(m, b)
}
func (m *Protocol_PeerID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol_PeerID.Marshal(b, m, deterministic)
}
func (m *Protocol_PeerID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol_PeerID.Merge(m, src)
}
func (m *Protocol_PeerID) XXX_Size() int {
	return xxx_messageInfo_Protocol_PeerID.Size(m)
}
func (m *Protocol_PeerID) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol_PeerID.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol_PeerID proto.InternalMessageInfo

func (m *Protocol_PeerID) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type Protocol_PeerInfo struct {
	Info                 []byte   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Protocol_PeerInfo) Reset()         { *m = Protocol_PeerInfo{} }
func (m *Protocol_PeerInfo) String() string { return proto.CompactTextString(m) }
func (*Protocol_PeerInfo) ProtoMessage()    {}
func (*Protocol_PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0, 1}
}

func (m *Protocol_PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol_PeerInfo.Unmarshal(m, b)
}
func (m *Protocol_PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol_PeerInfo.Marshal(b, m, deterministic)
}
func (m *Protocol_PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol_PeerInfo.Merge(m, src)
}
func (m *Protocol_PeerInfo) XXX_Size() int {
	return xxx_messageInfo_Protocol_PeerInfo.Size(m)
}
func (m *Protocol_PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol_PeerInfo proto.InternalMessageInfo

func (m *Protocol_PeerInfo) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.Protocol_Type", Protocol_Type_name, Protocol_Type_value)
	proto.RegisterType((*Protocol)(nil), "protocol.Protocol")
	proto.RegisterType((*Protocol_PeerID)(nil), "protocol.Protocol.PeerID")
	proto.RegisterType((*Protocol_PeerInfo)(nil), "protocol.Protocol.PeerInfo")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x03, 0x33, 0x84, 0x38, 0x60, 0x7c, 0xa5, 0xe5, 0x4c, 0x5c, 0x1c,
	0x01, 0x50, 0x8e, 0x90, 0x36, 0x17, 0x4b, 0x49, 0x65, 0x41, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0x9f, 0x91, 0xb8, 0x1e, 0x5c, 0x17, 0x4c, 0x85, 0x5e, 0x48, 0x65, 0x41, 0x6a, 0x10, 0x58, 0x91,
	0x90, 0x21, 0x17, 0x5b, 0x41, 0x6a, 0x6a, 0x91, 0xa7, 0x8b, 0x04, 0x93, 0x02, 0xa3, 0x06, 0xb7,
	0x91, 0x24, 0x16, 0xe5, 0x01, 0x60, 0x05, 0x41, 0x50, 0x85, 0x42, 0xe6, 0x5c, 0x1c, 0x60, 0x56,
	0x5e, 0x5a, 0xbe, 0x04, 0x33, 0x58, 0x93, 0x34, 0x2e, 0x4d, 0x79, 0x69, 0xf9, 0x41, 0x70, 0xc5,
	0x52, 0x12, 0x5c, 0x6c, 0x10, 0xa3, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0xc0, 0x0e, 0xe4, 0x09,
	0x62, 0xca, 0x4c, 0x91, 0x92, 0xe3, 0xe2, 0x80, 0xa9, 0x17, 0x12, 0xe2, 0x62, 0xc9, 0x04, 0x19,
	0x0d, 0x91, 0x05, 0xb3, 0x95, 0x3c, 0xb8, 0x58, 0x40, 0x6e, 0x16, 0x12, 0xe3, 0x12, 0x72, 0xf6,
	0xf7, 0xf3, 0x73, 0x75, 0x0e, 0xf1, 0xf4, 0xf7, 0x8b, 0x0f, 0x72, 0x0d, 0x0c, 0x75, 0x0d, 0x0e,
	0x11, 0x60, 0x00, 0x89, 0x7b, 0xf8, 0xfb, 0xb8, 0xc6, 0x07, 0x84, 0xfa, 0x39, 0x7b, 0xc0, 0xc5,
	0x19, 0x85, 0x04, 0xb8, 0x78, 0x02, 0x5c, 0x5d, 0x83, 0xe2, 0x43, 0xfd, 0xbc, 0xfd, 0xfc, 0xc3,
	0xfd, 0x04, 0x98, 0x93, 0xd8, 0xc0, 0x2e, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x23, 0xdd,
	0xb0, 0x9a, 0x4c, 0x01, 0x00, 0x00,
}
